import streamlit as st
import vertexai  #Vertex AI library for interacting with AI models
from vertexai.generative_models import GenerativeModel  #for chatbot interaction
import vertexai.preview.generative_models as generative_models  #safety settings

# connects the vertex AI environment to GCP project location
vertexai.init(project="numeric-ion-425514-k6", location="us-central1")

# creating specific model
model = GenerativeModel("gemini-1.0-pro-001")


# start session
chat = model.start_chat()


# taken from my vertex ai project
generation_config = {
    "max_output_tokens": 8192,  # Maximum number of tokens in the generated response
    "temperature": 1,  # Controls the randomness of the response (higher value = more random)
    "top_p": 0.95,  # Controls the diversity of the response (higher value = more diverse)
}


safety_settings = {
    generative_models.HarmCategory.HARM_CATEGORY_HATE_SPEECH: generative_models.HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,  # Block medium and above levels of hate speech
    generative_models.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT: generative_models.HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,  # Block medium and above levels of dangerous content
    generative_models.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT: generative_models.HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,  # Block medium and above levels of sexually explicit content
    generative_models.HarmCategory.HARM_CATEGORY_HARASSMENT: generative_models.HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,  # Block medium and above levels of harassment
}


st.title("Chatbot Interface")

#history log
if 'chat_history' not in st.session_state:
    st.session_state['chat_history'] = []


def get_chat_response(user_input):

    response = chat.send_message([user_input], generation_config=generation_config, safety_settings=safety_settings)
    # only returns text part of response
    # return response
    return response.candidates[0].content.parts[0].text

# text box for user input
user_input = st.text_input("You:", "")

if st.button("Send"):
    if user_input:

        response = get_chat_response(user_input)
        # adds user input and bot response to history
        st.session_state['chat_history'].append({"user_input": user_input, "chatbot_response": response})

# prints history
if st.session_state['chat_history']:
    for message in st.session_state['chat_history']:
        st.write(f"You: {message['user_input']}")
        st.write(f"Bot: {message['chatbot_response']}")
